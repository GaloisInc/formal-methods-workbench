import "Common.stg"


////////////////////////////////////////////////////////////////////////////
//
// Declarations related to component CAmkES file
//
////////////////////////////////////////////////////////////////////////////

componentCamkesPurpose(componentName) ::= <<
This header file contains the CAmkES component definition for the
AADL thread implementation <componentName>.
>>

filePrefix(name, date, path) ::= "<stdFilePrefix(date, path, componentCamkesPurpose(name))>"

filePostfix(name, path) ::= <<
>>

importThreadIdl(threadImpl) ::= <<
import "../../interfaces/<threadImpl.idlFileName>";

>>

importReaderWriterIdl(type) ::= <<
import "../../interfaces/<type.readerWriterIdlFileName>";

>>

importSharedDataAccessorIdl(sharedDataAccessor) ::= <<
import "../../interfaces/<sharedDataAccessor.type.sharedDataIdlFileName>";

>>

importRpgIdl(remoteProcedureGroup) ::= <<
import "../../interfaces/<remoteProcedureGroup.idlName>";

>>


sharedDataAccessorDecl(sharedDataAccessor) ::= <<
dataport <sharedDataAccessor.type.name> <sharedDataAccessor.name>;

>>

constructMemoryInterface(memoryRegion, dispatcher) ::= <<
dataport Buf <memoryRegion.name>;

>>

writeRpgInterface(endpoint) ::= <<
<endpoint.providesOrRequires> <endpoint.remoteProcedureGroup.name> <endpoint.name>;

>>

camkesAddComponentPortImports(port) ::= <<
<if(port.camkesAddComponentPortImports)>
import "../../interfaces/<port.camkesAddComponentPortImports>";
<endif>
>>

componentCamkesBody(threadImpl) ::= <<

<! import "../../interfaces/<threadImpl.idlFileName>"; !>
<if(threadImpl.requiresTimeServices)>
import \<Timer.idl4>;
<endif>

<threadImpl.portList:camkesAddComponentPortImports()>
<\\>


<commentIf("Idl files for shared data accessors",
            (threadImpl.sharedDataAccessorList:importSharedDataAccessorIdl()))><\\>

<commentIf("Idl files for RPCs",
           (threadImpl.usedRpgs:importRpgIdl()))><\\>

<threadImpl.portListEmitterCamkesComponentDeclarations>

component <threadImpl.componentName> {
    include "<threadImpl.model.systemTypeHeaderName>";
    <if(threadImpl.isActive)>
    control;
    has semaphore <threadImpl.dispatcherComponentSemaphoreName>;
    <endif>

    <threadImpl.portList:{port |<port.camkesAddComponentPortLevelDeclarations>}>

    <threadImpl.externalSemaphores:{ sem | has semaphore <sem>; }; separator="\n">
    <threadImpl.externalMutexes:{mut | has mutex <mut>; }; separator="\n">
    <threadImpl.endpoints:writeRpgInterface()>

    <commentIf("Provided interfaces for shared data",
               (threadImpl.sharedDataAccessorList:sharedDataAccessorDecl()))><\\>

    <if(threadImpl.requiresTimeServices)>
    // For time services
    uses Timer timer;
    <endif>
}
>>
