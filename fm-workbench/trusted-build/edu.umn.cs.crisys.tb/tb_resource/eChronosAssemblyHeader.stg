import "eChronosComponentC.stg"
import "Common.stg"
import "CommonCPrototypes.stg"

////////////////////////////////////////////////////////////////////////////
//
// Declarations related to eChronos .prx file
//
////////////////////////////////////////////////////////////////////////////

filePurpose(sysInstanceName) ::= <<
This file contains the declarations required for the cross-component
RPC calls for eChronos.
>>

headerIfdef(sysInstanceName) ::= "__TB_AADL_<sysInstanceName>_decls__H"

filePrefix(name, date, path) ::= <<
#ifndef <headerIfdef(name)>
#define <headerIfdef(name)>

<DARPALicenseComment()>

<filenameBlockComment(date, path, filePurpose(name))>

>>

filePostfix(name, path) ::= <<

/* endif for: #ifndef <headerIfdef(name)> */
#endif

<blockComment(arg={End of autogenerated file: <path>})>

>>



activeThreadDecls(threadImpl) ::= <<
<threadImpl.portList:{port|<port.eChronosAddCommonHFileDeclarations>}>
>>

passiveThreadDecls(threadImpl) ::= <<
<threadImpl.portList:{port|port.eChronosAddCommonHFileDeclarations}>
>>

headerBody(model) ::= <<

#include \<stdbool.h>
#include \<stddef.h>
#include \<stdint.h>
#include <\u003C><model.systemTypeHeaderName><\u003E>
#include <\u003C>rtos-kochab.h<\u003E>

// to initialize periodic dispatcher.  Call from main() before
// starting OS.

bool initialize_periodic_dispatcher();

   <model.activeThreadImplementations:activeThreadDecls()>
   <model.passiveThreadImplementations:passiveThreadDecls()>
>>
