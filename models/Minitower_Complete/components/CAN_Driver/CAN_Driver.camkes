import "../../interfaces/CAN_Driver_interface.idl4";
import "../../interfaces/bool_writer.idl4";
import "../../interfaces/SMACCM_DATA__CAN_Frame_i_writer.idl4";

import "clk/clk.camkes";
import "gpio/gpio.camkes";
import "spi/spi.camkes";
import "can/can.camkes";
import "can_shim/can_shim.camkes";

component clkbase {
    hardware;
    include "components/clk/include/porttype.h";
    dataport Buf cmu_cpu_clk;
    dataport Buf cmu_core_clk;
    dataport Buf cmu_top_clk;
}

component gpiobase {
    hardware;
    dataport Buf gpio1base;
    dataport Buf gpio2base;
    dataport Buf irqcbase;
    emits IRQGroup26 irq_grp26_int;
    emits IRQGroup28 irq_grp28_int;
    emits IRQGroup31 irq_grp31_int;
    emits EXINT16_31 xint16_31_int;
}

component spibase {
     hardware;
     dataport Buf spi1_reg;
     emits DataAvailable spi1_int;
}

component CAN_Driver {
    include <smaccm_top_i_types.h>;
    provides SMACCM_DATA__CAN_Frame_i_writer framing2self;
    uses bool_writer CAN_Driver_self2framing_status;
    uses SMACCM_DATA__CAN_Frame_i_writer CAN_Driver_self2framing_frame;

    composition {
        component clkbase clkbase_obj;
        component gpiobase gpiobase_obj;
        component spibase spibase_obj;

        component can_shim can_shim_obj;
        component can can_obj;
        component spi spi_obj;
        component gpio gpio_obj;
        component clk clk_obj;

        export can_shim_obj.framing2self -> framing2self;
        export can_shim_obj.CAN_Driver_self2framing_status -> CAN_Driver_self2framing_status;
        export can_shim_obj.CAN_Driver_self2framing_frame -> CAN_Driver_self2framing_frame;
        
        connection seL4RPC can_shim_obj_can_tx(from can_shim_obj.can_tx, to can_obj.can_tx);
        connection seL4RPC can_shim_obj_can_rx(from can_shim_obj.can_rx, to can_obj.can_rx);
        connection seL4Notification txb0_ack(from can_obj.txb0_ack, to can_shim_obj.txb0_ack);
        connection seL4Notification txb1_ack(from can_obj.txb1_ack, to can_shim_obj.txb1_ack);
        connection seL4Notification txb2_ack(from can_obj.txb2_ack, to can_shim_obj.txb2_ack);

        connection seL4HardwareMMIO clk_cmu_cpu_mem(from clk_obj.cmu_cpu_clk, to clkbase_obj.cmu_cpu_clk);
        connection seL4HardwareMMIO clk_cmu_top_mem(from clk_obj.cmu_top_clk, to clkbase_obj.cmu_top_clk);
        connection seL4HardwareMMIO clk_cmu_core_mem(from clk_obj.cmu_core_clk, to clkbase_obj.cmu_core_clk);

        connection seL4HardwareMMIO gpio_mem1(from gpio_obj.gpio1base, to gpiobase_obj.gpio1base);
        connection seL4HardwareMMIO gpio_mem2(from gpio_obj.gpio2base, to gpiobase_obj.gpio2base);
        connection seL4HardwareMMIO gpio_mem3(from gpio_obj.irqcbase, to gpiobase_obj.irqcbase);

        connection seL4HardwareMMIO spi1_mem(from spi_obj.spi1_reg, to spibase_obj.spi1_reg);

        connection seL4HardwareInterrupt spi1_irq(from spibase_obj.spi1_int, to spi_obj.spi1_int);
        connection seL4HardwareInterrupt gpio_grp28_irq(from gpiobase_obj.irq_grp28_int, to gpio_obj.irq_grp28_int);
        connection seL4HardwareInterrupt gpio_grp26_irq(from gpiobase_obj.irq_grp26_int, to gpio_obj.irq_grp26_int);
        connection seL4HardwareInterrupt gpio_grp31_irq(from gpiobase_obj.irq_grp31_int, to gpio_obj.irq_grp31_int);
        connection seL4HardwareInterrupt gpio_xint16_31_irq(from gpiobase_obj.xint16_31_int, to gpio_obj.xint16_31_int);

        connection seL4RPC spi_gpio(from spi_obj.gpio, to gpio_obj.gpio);
        connection seL4RPC spi_clk(from spi_obj.clktree, to clk_obj.clktree);

        connection seL4RPC can_spi(from can_obj.spi, to spi_obj.spi);
        connection seL4SharedData can_spi_channel(from can_obj.spi_can,to spi_obj.spi1_can);
        connection seL4Notification gpio_can_int(from gpio_obj.CANInt, to can_obj.Int);
        connection seL4Notification gpio_can_intAck(from can_obj.IntAck, to gpio_obj.CANIntAck);
    }

    configuration {
        // GPIO
        gpiobase_obj.gpio2base_paddr = 0x14000000;
        gpiobase_obj.gpio2base_size = 0x1000;
        gpiobase_obj.gpio1base_paddr = 0x13400000;
        gpiobase_obj.gpio1base_size = 0x1000;


        // IRQ COMBINER
        gpiobase_obj.irqcbase_paddr  = 0x10440000;
        gpiobase_obj.irqcbase_size  = 0x1000;
        gpiobase_obj.irq_grp28_int_irq_number = 60; // Combined IRQ group 28
        gpiobase_obj.irq_grp31_int_irq_number = 63; // Combined IRQ group 31
        gpiobase_obj.xint16_31_int_irq_number = 64; // Extern Interrupt EINT16-EINT31

        // TODO: FIXME: XXX: Made up by Andrew Gacek to make CAmkES Next happy
        gpiobase_obj.irq_grp26_int_irq_number = 61;

        // SPI1
        spibase_obj.spi1_reg_paddr = 0x12D30000;
        spibase_obj.spi1_reg_size = 0x1000;
        spibase_obj.spi1_int_irq_number = 101;

        // CMU
        clkbase_obj.cmu_cpu_clk_paddr = 0x10010000;
        clkbase_obj.cmu_cpu_clk_size = 0x1000;
        clkbase_obj.cmu_core_clk_paddr = 0x10014000;
        clkbase_obj.cmu_core_clk_size = 0x1000;
        clkbase_obj.cmu_top_clk_paddr = 0x10020000;
        clkbase_obj.cmu_top_clk_size = 0x1000;
    }
}
