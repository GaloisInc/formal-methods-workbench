############################################################################
#
#   ***AUTOGENERATED CODE (modify if you need to :-) ***
#
# TODO: add DARPA license?
#
# This file is an automatically generated makefile from the AADL build
# system designed for the CAmkES build system.  It will work for projects
# in which all C files and libraries are "known" to the AADL file.
# However, for projects with more complex dependencies and "external"
# components that are not described in the AADL file, it will need to be
# extended.
#
############################################################################
TARGETS := $(notdir ${SOURCE_DIR}).cdl
ADL := sel4_cpu_assembly.camkes


# For time server: subdirectory containing extra templates.
TEMPLATES := templates global-templates

VM_CONFIG := sel4_cpu
VM_NUM_VM := 2

#include TimeServerX86Stack/TimeServer.mk
#include TimeServerX86/TimeServerX86.mk
include TimeServer/TimeServer.mk
include SerialServer/SerialServer.mk
include RTC/RTC.mk
include Ethdriver/Ethdriver.mk
include UDPServer/UDPServer.mk
include HelloWorld/HelloWorld.mk
include Echo/Echo.mk
include Vchan/Vchan.mk
include PCIConfigIO/PCIConfigIO.mk
include FileServer/FileServer.mk
include Init/Init.mk
include StringReverse/StringReverse.mk


Init0_CFILES += $(wildcard $(SOURCE_DIR)/src/*.c) \
                $(wildcard $(SOURCE_DIR)/common/src/*.c)

Init0_HFILES += $(wildcard $(SOURCE_DIR)/common/include/*.h) \
				$(wildcard $(SOURCE_DIR)/common/shared_include/cross_vm_shared/*.h)

sender_CFILES +=  \
    $(patsubst ${SOURCE_DIR}/%,%,$(wildcard ${SOURCE_DIR}/components/sender/src/*.c)) \
    $(patsubst ${SOURCE_DIR}/%,%,$(wildcard ${SOURCE_DIR}/components/sender/src/plat/${PLAT}/*.c)) \
    $(patsubst ${SOURCE_DIR}/%,%,$(wildcard ${SOURCE_DIR}/components/sender/src/arch/${ARCH}/*.c))

sender_HFILES += \
   $(patsubst ${SOURCE_DIR}/%,%,$(wildcard ${SOURCE_DIR}/components/sender/include/*.h)) \
   $(patsubst ${SOURCE_DIR}/%,%,$(wildcard ${SOURCE_DIR}/include/*.h)) \
   $(patsubst ${SOURCE_DIR}/%,%,$(wildcard $(SOURCE_DIR)/common/include/*.h)) \
   $(patsubst ${SOURCE_DIR}/%,%,$(wildcard $(SOURCE_DIR)/common/shared_include/cross_vm_shared/*.h))

sender_ASMFILES := \
    $(patsubst ${SOURCE_DIR}/%,%,$(wildcard ${SOURCE_DIR}/components/sender/crt/arch-${ARCH}/crt0.S)) \
    $(patsubst ${SOURCE_DIR}/%,%,$(wildcard ${SOURCE_DIR}/components/sender/src/*.S)) \
    $(patsubst ${SOURCE_DIR}/%,%,$(wildcard ${SOURCE_DIR}/components/sender/src/arch/${ARCH}/*.S)) \
    $(patsubst ${SOURCE_DIR}/%,%,$(wildcard ${SOURCE_DIR}/components/sender/src/plat/${PLAT}/*.S))


dispatch_periodic_CFILES +=  \
    $(patsubst ${SOURCE_DIR}/%,%,$(wildcard ${SOURCE_DIR}/components/dispatch_periodic/src/*.c)) \
    $(patsubst ${SOURCE_DIR}/%,%,$(wildcard ${SOURCE_DIR}/components/dispatch_periodic/src/plat/${PLAT}/*.c)) \
    $(patsubst ${SOURCE_DIR}/%,%,$(wildcard ${SOURCE_DIR}/components/dispatch_periodic/src/arch/${ARCH}/*.c))

dispatch_periodic_HFILES += \
   $(patsubst ${SOURCE_DIR}/%,%,$(wildcard ${SOURCE_DIR}/components/dispatch_periodic/include/*.h)) \
   $(patsubst ${SOURCE_DIR}/%,%,$(wildcard ${SOURCE_DIR}/include/*.h)) \
   $(wildcard $(SOURCE_DIR)/common/include/*.h) \
   $(wildcard $(SOURCE_DIR)/common/shared_include/cross_vm_shared/*.h)



dispatch_periodic_ASMFILES := \
    $(patsubst ${SOURCE_DIR}/%,%,$(wildcard ${SOURCE_DIR}/components/dispatch_periodic/crt/arch-${ARCH}/crt0.S)) \
    $(patsubst ${SOURCE_DIR}/%,%,$(wildcard ${SOURCE_DIR}/components/dispatch_periodic/src/*.S)) \
    $(patsubst ${SOURCE_DIR}/%,%,$(wildcard ${SOURCE_DIR}/components/dispatch_periodic/src/arch/${ARCH}/*.S)) \
    $(patsubst ${SOURCE_DIR}/%,%,$(wildcard ${SOURCE_DIR}/components/dispatch_periodic/src/plat/${PLAT}/*.S))

# We want to run C99
CFLAGS += -std=gnu99 "-DCAMKES_VM_CONFIG=${VM_CONFIG}" -I${SOURCE_DIR}/configurations -I${SOURCE_DIR}/../../components/VM/configurations

CAMKES_FLAGS += --cpp-flag=-I${SOURCE_DIR}/configurations --cpp-flag=-I${SOURCE_DIR}/../../components/VM --cpp-flag="-DCAMKES_VM_CONFIG=${VM_CONFIG}" --cache-dir=${PWD}/build/camkes_cache

include ${PWD}/tools/camkes/camkes.mk

KERNEL_FILENAME := bzimage
ROOTFS_FILENAME := rootfs.cpio

ARCHIVE_DEPS := ${STAGE_DIR}/${KERNEL_FILENAME} ${STAGE_DIR}/${ROOTFS_FILENAME}

${STAGE_DIR}/${KERNEL_FILENAME}: $(SOURCE_DIR)/linux/${KERNEL_FILENAME}
	@echo "[EXTRACT-VMLINUX] $@"
	$(Q)mkdir -p $(@D)
	${PWD}/tools/elf/extract-vmlinux $< > $@

${STAGE_DIR}/${ROOTFS_FILENAME}: ${SOURCE_DIR}/linux/${ROOTFS_FILENAME}
	@echo "[CP] $@"
	@cp $< $@

${BUILD_DIR}/src/vm.fserv/static/archive.o: ${ARCHIVE_DEPS}
	$(Q)mkdir -p $(dir $@)
	@echo "[CPIO] $@"
	$(Q)${COMMON_PATH}/files_to_obj.sh $@ _cpio_archive $^
	@echo "[CPIO] done."

