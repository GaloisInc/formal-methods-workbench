/**************************************************************************
  Copyright (c) 2013, 2014, 2015 Rockwell Collins and the University of Minnesota.
  Developed with the sponsorship of the Defense Advanced Research Projects Agency (DARPA).

  Permission is hereby granted, free of charge, to any person obtaining a copy of this data,
  including any software or models in source or binary form, as well as any drawings, specifications, 
  and documentation (collectively "the Data"), to deal in the Data without restriction, including 
  without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, 
  and/or sell copies of the Data, and to permit persons to whom the Data is furnished to do so, 
  subject to the following conditions: 

  The above copyright notice and this permission notice shall be included in all copies or
  substantial portions of the Data.

  THE DATA IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT 
  LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
  IN NO EVENT SHALL THE AUTHORS, SPONSORS, DEVELOPERS, CONTRIBUTORS, OR COPYRIGHT HOLDERS BE LIABLE 
  FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, 
  ARISING FROM, OUT OF OR IN CONNECTION WITH THE DATA OR THE USE OR OTHER DEALINGS IN THE DATA. 

 **************************************************************************/


/**************************************************************************

   File: C:\docs\git\git_smaccm\smaccm\models\Trusted_Build_Test\can\wrapper_i_assembly.camkes
   Created on: 2016/05/11 22:39:52
   using Dulcimer AADL system build tool suite 

   ***AUTOGENERATED CODE: DO NOT MODIFY***

  This file contains the main CAmkES assembly for the  
  AADL system instance rooted at wrapper_i_Instance.

 **************************************************************************/
import <std_connector.camkes>;
import "components/dispatch_periodic/dispatch_periodic.camkes";

import <TimeServerOdroid/TimeServer.camkes>;




import "components/sender/sender.camkes";
import "components/can_node/can_node.camkes";
import "components/receiver/receiver.camkes";



connector seL4RPCCallDataport {
    from Procedure client template "seL4RPCCallDataport-from.template.c";
    to Procedure server template "seL4RPCCallDataport-to.template.c";
}


assembly {
	composition {
        // Periodic components (if any)
        component dispatch_periodic dispatch_periodic_inst;


		component TimeServerOdroid time_server;


		// IRQ-handling hardware components

		// component instances for all AADL-defined threads
		component sender sender_inst;
		component can_node can_node_inst;
		component receiver receiver_inst;


		// connections from active dispatchers to passive threads
	

		// connections from active dispatcher send/receive to other active dispatcher send/receive
		connection seL4RPCCall conn1 (from sender_inst.sender_abort_can_node_abort_0, to can_node_inst.abort_0); 
			connection seL4RPCCall conn2 (from sender_inst.sender_output_can_node_send_0, to can_node_inst.send_0); 
			

		// Periodic dispatcher connections
		connection seL4RPCCall conn3 (from dispatch_periodic_inst.sender_periodic_dispatcher, to sender_inst.sender_periodic_dispatcher);


		connection seL4TimeServer periodic_dispatch_timer(from dispatch_periodic_inst.timer, to time_server.the_timer);
		connection seL4GlobalAsynchCallback echo_int(from time_server.timer_notification, to dispatch_periodic_inst.timer_complete);


		// IRQ connections (if any)

		// component read/write connections

		// Direct RPC connections

		// Shared memory connections
	}
    configuration {
		dispatch_periodic_inst.timer_attributes = "10"; 
		dispatch_periodic_inst.timer_global_endpoint = "periodic_dispatcher_timer";
		dispatch_periodic_inst.timer_complete_global_endpoint = "periodic_dispatcher_timer";				
		dispatch_periodic_inst.priority = 201;  
		sender_inst.priority = 11;	

		receiver_inst.priority = 11;	


		sender_inst._control_stack_size = 1000;	

		receiver_inst._control_stack_size = 1000;	


		
		// MWW: todo: set scheduling contexts for interfaces for thread sender_inst.
		// MWW: todo: set scheduling contexts for interfaces for thread can_node_inst.
		// MWW: todo: set scheduling contexts for interfaces for thread receiver_inst.

		sender_inst._period = 100000;
		sender_inst._budget = 50000;can_node_inst._period = 10000;
		can_node_inst._budget = 50000;receiver_inst._period = -1;
		receiver_inst._budget = 50000;
	

    }
}


/**************************************************************************
  End of autogenerated file: C:\docs\git\git_smaccm\smaccm\models\Trusted_Build_Test\can\wrapper_i_assembly.camkes
 **************************************************************************/
