import <std_connector.camkes>;

import "VM/VM.camkes";
import "Vchan/Vchan.camkes";
import "VM_shim/VM_shim.camkes";

import <VchanInterface.idl4>;
import <SMACCM_DATA__Camera_Bounding_Box_i_writer.idl4>;


component Virtual_Machine {
    include "tb_smaccmcopter_types.h";
    uses SMACCM_DATA__Camera_Bounding_Box_i_writer self2server;
    provides bool_writer server2self_reboot;

    composition {
        component VM vm_obj;
        component Vchan vchan_obj;
        component VM_shim vm_shim_obj;

        export vm_shim_obj.self2server -> self2server;
        export vm_shim_obj.server2self_reboot -> server2self_reboot;

        connection seL4RPCCall vchan(from vm_obj.vchan_con, to vchan_obj.vchan_com);
        connection seL4Notification vchan_event_init(from vchan_obj.vevent_cl, to vm_obj.vevent);
        connection seL4SharedData vchan_sharemem_0(from vm_obj.share_mem, to vchan_obj.share_mem);

        connection seL4Notification vchan_event(from vchan_obj.vevent_sv, to vm_shim_obj.vevent);
        connection seL4SharedData hvchan_sharemem_0(from vm_shim_obj.share_mem, to vchan_obj.share_mem);
        connection seL4RPCCall hvchan(from vm_shim_obj.vchan_con, to vchan_obj.vchan_com);
        connection seL4Notification restart_conn(from vm_shim_obj.restart_vm, to vm_obj.restart_event);
    }

    configuration {
        /* MMIO regions are
            0x10000000 CHIP_ID
            0x10486000 VCPU
            0x12c20000 UART2
            0x13400000 GPIO_RIGHT
            0x10040000 POWER0
            0x10041000 POWER1
            0x10042000 POWER2
            0x10043000 POWER3
            0x10044000 POWER4
            0x10050000 SYSREG
            0x10020000 CMU_TOP
            0x10014000 CMU_CORE
            0x10010000 CMU_CPU
            0x10030000 CMU_COREX
            0x10038000 CMU_MEM
            0x1001c000 CMU_ISP
            0x10018000 CMU_ACP
            0x12110000 USB EHCI
            0x12130000 USB CTRL
            0x12200000 MSH0
            0x12220000 MSH2
            0x40000000 RAM
        */
        vm_obj.untyped_mmios = ["0x10000000:12",
                                "0x10486000:12",
                                "0x12c20000:12",
                                "0x10040000:12",
                                "0x10041000:12",
                                "0x10042000:12",
                                "0x10043000:12",
                                "0x10044000:12",
                                "0x10050000:12",
                                "0x10030000:12",
                                "0x10038000:12",
                                "0x1001c000:12",
                                "0x10018000:12",
                                "0x12200000:12",
                                "0x12220000:12",
                                "0x40000000:29"];

        vm_obj.mmios = ["0x10010000:0x1000:12",
                        "0x10020000:0x1000:12",
                        "0x12110000:0x1000:12",
                        "0x12130000:0x1000:12",
                        "0x13400000:0x1000:12",
                        "0x10014000:0x1000:12"];

        /* IRQs are
            27  VTCNT (arch timer)
            85  UART2
            107 SDMMC0
            109 SDMMC2
            103 USB
        */
        vm_obj.irqs = [27, 85, 107, 109, 103];

        vm_obj.asid_pool = true;

        vm_obj.simple = true;
        vm_obj.cnode_size_bits = 23;
        vm_obj.simple_untyped24_pool = 10;

        vm_obj.base_prio = 100;
        vm_obj.priority = 101;
        vchan_obj.priority = 102;
        vm_shim_obj.priority = 103;

        vm_obj.sem_value = 0;
        vm_obj.num_extra_frame_caps = 0;
        vm_obj.extra_frame_map_address = 0;
    }
}
